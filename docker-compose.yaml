version: '3'
services:
  appcore:
    build:
      context: .
      dockerfile: core.dockerfile
    container_name: probody_appcore
    volumes:
      - ./src:/app
    networks:
      - probodynet
    depends_on:
      - mongo
      - redis
    ports:
      - "4119:4119"
    restart: unless-stopped

  redis:
    image: redislabs/redisearch:2.0.1
    container_name: probody_redis
    networks:
      - probodynet
    ports:
      - "6399:6379"
    restart: unless-stopped
    entrypoint: redis-server --loadmodule /usr/lib/redis/modules/redisearch.so --appendonly yes
    volumes:
      - ./volumes/redis-data:/data

  mongo:
    image: mongo
    container_name: probody_mongo
    volumes:
      - ./volumes/db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - probodynet
    ports:
      - "27022:27017"
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 2jkpJeB8yGXt
      MONGO_INITDB_DATABASE: probodydb

  mailserver:
    image: docker.io/mailserver/docker-mailserver:latest
    container_name: probody_mailserver
    hostname: mail
    domainname: probody.kz
    ports:
      - "25:25"
      - "587:587"
      - "465:465"
    volumes:
      - ./volumes/dms/mail-data:/var/mail
      - ./volumes/dms/mail-state:/var/mail-state
      - ./volumes/dms/mail-logs:/var/log/mail
      - ./volumes/dms/config:/tmp/docker-mailserver
      - ./volumes/certs:/etc/letsencrypt
    environment:
      - ENABLE_FAIL2BAN=1
      - SSL_TYPE=letsencrypt
      - PERMIT_DOCKER=network
      - ONE_DIR=1
      - ENABLE_POSTGREY=0
      - ENABLE_CLAMAV=0
      - ENABLE_SPAMASSASSIN=0
      - SPOOF_PROTECTION=0
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  rainloop:
    container_name: "probody_rainloop"
    image: solidnerd/rainloop:1.10.5.192
    volumes:
      - ./volumes/rainloop:/var/www/rainloop/data
    ports:
      - "9530:80"

networks:
  probodynet:
